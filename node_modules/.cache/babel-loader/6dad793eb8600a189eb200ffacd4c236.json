{"ast":null,"code":"var _jsxFileName = \"/Users/alanlee/Documents/Umich/webDev/debate/frontend/src/pages/Room.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport App from '../App';\nimport { useNavigate } from \"react-router-dom\";\nimport Waiting from '../components/Waiting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Message(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: props.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Message;\n\nconst Room = () => {\n  _s();\n\n  const {\n    roomName\n  } = useParams();\n  const {\n    side\n  } = useParams();\n  const [roomFull, setRoomFull] = useState(false);\n  const chatSocket = useRef(null);\n  const [messages, setNewMessage] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    chatSocket.current = new WebSocket('ws://' + \"127.0.0.1:8000\" + '/ws/chat/' + roomName + '/');\n\n    chatSocket.current.onmessage = function (e) {\n      console.log(\"message recieved\");\n      let data = JSON.parse(e.data);\n\n      if (data[\"type\"] == \"server\") {\n        if (data[\"message\"][\"content\"] == \"room_full_status\" && data[\"message\"][\"status\"]) {\n          setRoomFull(true);\n        } else if (data[\"message\"][\"content\"] == \"DISCONNECT\") {\n          navigate(\"/\");\n        }\n      } else {\n        setNewMessage(messages => [...messages, data[\"message\"]]);\n        console.log(messages);\n      }\n    };\n\n    chatSocket.current.onclose = function (e) {\n      console.log('Chat socket closed unexpectedly');\n      navigate(\"/\");\n    };\n  }, []);\n\n  let sendMessage = () => {\n    const messageInputDom = document.querySelector('#chat-message-input');\n    const message = messageInputDom.value;\n\n    if (message == \"\") {\n      return;\n    }\n\n    chatSocket.current.send(JSON.stringify({\n      'message': message\n    }));\n    messageInputDom.value = '';\n  };\n\n  document.addEventListener(\"keypress\", function (event) {\n    // If the user presses the \"Enter\" key on the keyboard\n    if (event.key === \"Enter\") {\n      // Cancel the default action, if needed\n      event.preventDefault(); // Trigger the button element with a click\n\n      document.getElementById(\"submit\").click();\n    }\n  });\n\n  if (roomFull) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messagePanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideCover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [roomName, \" : \", side]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageField\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n                content: message\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 63\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typeField\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"chat-message-input\",\n              type: \"text\",\n              size: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"submit\",\n              onClick: sendMessage,\n              children: \"SUBMIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideCover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(Room, \"jXO2Pp8v2AnCwsUSPNBaMxjdLDg=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c2 = Room;\nexport default Room;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Room\");","map":{"version":3,"names":["React","useParams","useState","useEffect","useRef","App","useNavigate","Waiting","Message","props","content","Room","roomName","side","roomFull","setRoomFull","chatSocket","messages","setNewMessage","navigate","current","WebSocket","onmessage","e","console","log","data","JSON","parse","onclose","sendMessage","messageInputDom","document","querySelector","message","value","send","stringify","addEventListener","event","key","preventDefault","getElementById","click","map","index"],"sources":["/Users/alanlee/Documents/Umich/webDev/debate/frontend/src/pages/Room.js"],"sourcesContent":["import * as React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport App from '../App';\nimport { useNavigate } from \"react-router-dom\";\nimport Waiting from '../components/Waiting';\n\nfunction Message(props){\n    return <li>{props.content}</li>\n}\n\nconst Room = () =>{\n\n\n    const { roomName } = useParams()\n    const { side } = useParams()\n    const [roomFull, setRoomFull] = useState(false)\n\n    const chatSocket = useRef(null);\n\n    const [messages, setNewMessage] = useState([]);\n\n\n\n    const navigate = useNavigate();\n    useEffect(() => {\n        chatSocket.current = new WebSocket(\n            'ws://'\n            + \"127.0.0.1:8000\"\n            + '/ws/chat/'\n            + roomName\n            + '/'\n        )\n        \n\n        chatSocket.current.onmessage = function(e) {\n            console.log(\"message recieved\")\n            let data = JSON.parse(e.data)\n            if (data[\"type\"] == \"server\"){\n                \n                if (data[\"message\"][\"content\"] == \"room_full_status\" && data[\"message\"][\"status\"]){\n                    setRoomFull(true)\n                }\n                else if (data[\"message\"][\"content\"] == \"DISCONNECT\"){\n                    navigate(\"/\")\n                }\n            }\n            else{\n                setNewMessage( messages => [...messages,data[\"message\"]])\n                console.log(messages)\n            }\n        }\n        chatSocket.current.onclose = function(e) {\n            console.log('Chat socket closed unexpectedly')\n            navigate(\"/\")\n        }\n    }, []);\n\n    let sendMessage = () => {\n        const messageInputDom = document.querySelector('#chat-message-input');\n        const message = messageInputDom.value;\n        if (message == \"\"){\n            return\n        }\n        chatSocket.current.send(JSON.stringify({\n            'message': message\n        }));\n        messageInputDom.value = '';\n    };\n\n    document.addEventListener(\"keypress\", function(event) {\n        // If the user presses the \"Enter\" key on the keyboard\n        if (event.key === \"Enter\") {\n          // Cancel the default action, if needed\n          event.preventDefault();\n          // Trigger the button element with a click\n          document.getElementById(\"submit\").click();\n        }\n      });\n\n    if (roomFull){\n    return (\n        \n        <div className=\"App\">\n            \n            <div className = \"messagePanel\">\n                <div className='sideCover'></div>\n                <div className='middle'>\n                    <h1>{roomName} : {side}</h1>\n                    <div className='messageField'>\n                        <ul>\n                            {messages.map((message, index) => <Message key = {index} content = {message}/>)}\n                        </ul>\n                    </div>\n                    <div className= 'typeField'>\n                        <input id=\"chat-message-input\" type=\"text\" size=\"100\"></input>\n                        <button id = \"submit\" onClick={sendMessage}>SUBMIT</button>\n                    </div>\n                    \n                </div>\n                <div className='sideCover'></div>\n            </div>\n           \n        </div>\n\n       \n    )    \n    }\n    else{\n        return (\n        <div className=\"App\"> \n            <Waiting/>\n        </div>)\n    }\n}   \n\nexport default Room;"],"mappings":"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"},"metadata":{},"sourceType":"module"}