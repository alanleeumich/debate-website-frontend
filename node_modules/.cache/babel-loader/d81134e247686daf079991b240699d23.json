{"ast":null,"code":"var _jsxFileName = \"/Users/alanlee/Documents/Umich/webDev/debate/frontend/src/pages/Room.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport App from '../App';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Message(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: props.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Message;\n\nconst Room = () => {\n  _s();\n\n  const {\n    roomName\n  } = useParams();\n  const {\n    side\n  } = useParams();\n  const [roomFull, setRoomFull] = useState(false);\n  const chatSocket = useRef(null);\n  const [messages, setNewMessage] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    chatSocket.current = new WebSocket('ws://' + \"127.0.0.1:8000\" + '/ws/chat/' + roomName + '/');\n\n    chatSocket.current.onmessage = function (e) {\n      console.log(\"message recieved\");\n      let data = JSON.parse(e.data);\n\n      if (data[\"type\"] == \"server\") {\n        if (data[\"message\"][\"content\"] == \"room_full_status\" && data[\"message\"][\"status\"]) {\n          setRoomFull(true);\n        } else if (data[\"message\"][\"content\"] == \"DISCONNECT\") {\n          navigate(\"/\");\n        }\n      } else {\n        setNewMessage(messages => [...messages, data[\"message\"]]);\n        console.log(messages);\n      }\n    };\n\n    chatSocket.current.onclose = function (e) {\n      console.log('Chat socket closed unexpectedly');\n      navigate(\"/\");\n    };\n  }, []);\n\n  let sendMessage = () => {\n    const messageInputDom = document.querySelector('#chat-message-input');\n    const message = messageInputDom.value;\n    chatSocket.current.send(JSON.stringify({\n      'message': message\n    }));\n    messageInputDom.value = '';\n  };\n\n  if (roomFull) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [roomName, \" : \", side]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          content: message\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"chat-message-input\",\n        type: \"text\",\n        size: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"waiting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(Room, \"jXO2Pp8v2AnCwsUSPNBaMxjdLDg=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c2 = Room;\nexport default Room;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Room\");","map":{"version":3,"names":["React","useParams","useState","useEffect","useRef","App","useNavigate","Message","props","content","Room","roomName","side","roomFull","setRoomFull","chatSocket","messages","setNewMessage","navigate","current","WebSocket","onmessage","e","console","log","data","JSON","parse","onclose","sendMessage","messageInputDom","document","querySelector","message","value","send","stringify","map","id"],"sources":["/Users/alanlee/Documents/Umich/webDev/debate/frontend/src/pages/Room.js"],"sourcesContent":["import * as React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport App from '../App';\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction Message(props){\n    return <li>{props.content}</li>\n}\n\nconst Room = () =>{\n\n\n    const { roomName } = useParams()\n    const { side } = useParams()\n    const [roomFull, setRoomFull] = useState(false)\n\n    const chatSocket = useRef(null);\n\n    const [messages, setNewMessage] = useState([]);\n\n\n\n    const navigate = useNavigate();\n    useEffect(() => {\n        chatSocket.current = new WebSocket(\n            'ws://'\n            + \"127.0.0.1:8000\"\n            + '/ws/chat/'\n            + roomName\n            + '/'\n        )\n        \n\n        chatSocket.current.onmessage = function(e) {\n            console.log(\"message recieved\")\n            let data = JSON.parse(e.data)\n            if (data[\"type\"] == \"server\"){\n                \n                if (data[\"message\"][\"content\"] == \"room_full_status\" && data[\"message\"][\"status\"]){\n                    setRoomFull(true)\n                }\n                else if (data[\"message\"][\"content\"] == \"DISCONNECT\"){\n                    navigate(\"/\")\n                }\n            }\n            else{\n                setNewMessage( messages => [...messages,data[\"message\"]])\n                console.log(messages)\n            }\n        }\n        chatSocket.current.onclose = function(e) {\n            console.log('Chat socket closed unexpectedly')\n            navigate(\"/\")\n        }\n    }, []);\n\n    let sendMessage = () => {\n        const messageInputDom = document.querySelector('#chat-message-input');\n        const message = messageInputDom.value;\n        chatSocket.current.send(JSON.stringify({\n            'message': message\n        }));\n        messageInputDom.value = '';\n    };\n\n    if (roomFull){\n    return (\n        \n        <div className=\"App\">\n            \n            \n            <h1>{roomName} : {side}</h1>\n            <ul>\n                {messages.map((message) => <Message key = {message.id} content = {message}/>)}\n            </ul>\n            <input id=\"chat-message-input\" type=\"text\" size=\"100\"></input><br/>\n            <button onClick={sendMessage}>SUBMIT</button><br></br>\n            \n           \n        </div>\n\n       \n    )    \n    }\n    else{\n        return (\n        <div className=\"App\"> \n            <h1>waiting...</h1>\n        </div>)\n    }\n}   \n\nexport default Room;"],"mappings":"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"},"metadata":{},"sourceType":"module"}